list

arraylist
底层是数组，线程不安全，查询快，默认长度10 ，扩容1.5
如何扩容
创建新数组，并且新数组长度是原来数组的1.5倍，使用copyof方法将老数据拷贝到新数组里面
完成扩容后再把当前需要添加的元素加入新数组，完成扩容
linkedlist底层是双向链表，插入和删除效率高，线程不安全，无需扩容
vector是数组，线程安全，查询插入删除慢，默认长度10，扩容2倍，可以自定义增长空间


map
hashmap底层是数组+链表+红黑树，线程不安全，k/v可以为null，默认数组长度16，扩容2的幂次方，加载因子0.75
如何扩容
当数组长度大于64，链表长度大于8，会转变为红黑树
为什么变成红黑树
红黑树有很好的自平衡，通过左旋右旋变色来保存平衡，在通过二分查找可以提高效率
